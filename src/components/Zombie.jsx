/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 src/assets/Zombie.glb -o src/components/Zombie.jsx -r public 
*/

import React, { useEffect, useMemo, useRef, useState } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { useGraph } from "@react-three/fiber";
import { SkeletonUtils } from "three-stdlib";

export function Zombie(props) {
  const group = useRef();
  const { materials, animations, scene } = useGLTF("/../src/assets/Zombie.glb");

  useEffect(() => {
    actions[props.animation].reset().fadeIn(0.5).play();
    return () => actions[props.animation]?.fadeOut(0.5);
  }, [props.animation]);

  const clone = useMemo(() => SkeletonUtils.clone(scene), [scene]);
  const { actions } = useAnimations(animations, group);
  const { nodes } = useGraph(clone);
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Root_Scene">
        <group name="RootNode">
          <group name="Armature">
            <primitive object={nodes.mixamorigHips} />
          </group>
          <skinnedMesh
            name="Character"
            geometry={nodes.Character.geometry}
            material={materials.ColorSwatch}
            skeleton={nodes.Character.skeleton}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/../src/assets/Zombie.glb");
